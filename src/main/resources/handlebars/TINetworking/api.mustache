{{#operations}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import TINetworking

{{#description}}
/**
 {{description}}
 */
{{/description}}
public extension EndpointRequest {
{{#operation}}
{{#contents}}
    {{#parameters}}
    {{#isEnum}}
    /**
     * enum for parameter {{paramName}}
     */
    enum {{enumName}}_{{operationId}}: {{^isContainer}}{{{dataType}}}{{/isContainer}}{{#isContainer}}String{{/isContainer}} { {{#allowableValues}}{{#enumVars}}
        case {{name}} = {{#isContainer}}"{{/isContainer}}{{#isString}}"{{/isString}}{{{value}}}{{#isString}}"{{/isString}}{{#isContainer}}"{{/isContainer}}{{/enumVars}}{{/allowableValues}}
    }

    {{/isEnum}}
    {{/parameters}}
    /**
     {{#summary}}
     {{{summary}}}
     {{/summary}}

     {{#parameters}}
     - parameter {{paramName}}: {{description}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
     {{/parameters}}
     */
    static func {{operationId}}({{#parameters}}{{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}? = nil{{/required}}{{#hasMore}}, {{/hasMore}}{{/parameters}}{{#hasParams}}, {{/hasParams}}server: Server? = nil) -> EndpointRequest<{{#parameters}}{{#isBodyParam}}{{{dataType}}}{{/isBodyParam}}{{/parameters}}{{^hasBodyParam}}EmptyBody{{/hasBodyParam}}, {{{returnType}}}> {
        .init(templatePath: "{{{path}}}",
                      method: .init(rawValue: "{{httpMethod}}"),
                      body: {{#hasBodyParam}}body{{/hasBodyParam}}{{^hasBodyParam}}EmptyBody(){{/hasBodyParam}},
                      acceptableStatusCodes: [{{contentExtensions.x-codegen-acceptable-status-codes}}],
                      server: server)
    }
{{/contents}}
{{/operation}}
}
{{/operations}}
